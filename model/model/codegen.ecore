<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="codegen" nsURI="urn:org.nasdanika.codegen" nsPrefix="org.nasdanika.codegen">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="Code generation model is a hierarchy of resource generators and resource content generators.&#xA;&#xA;&#xA;&#xA;"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Generator" abstract="true" eSuperTypes="../../org.nasdanika.ncore/model/ncore.ecore#//Entity ../../org.nasdanika.ncore/model/ncore.ecore#//Configurable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generator is the base class for model element performing code generation.&#xA;&#xA;Generator final context is constucted in the following order:&#xA;&#xA;* Iterator is processed&#xA;* If context map is not blank then iterator contexts are mapped&#xA;* If configuration elements are present they are injected into the previously constructed context&#xA;"/>
    </eAnnotations>
    <eOperations name="validate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Validates element."/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Diagnostics to add validation messages to."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Validation context."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="enabled" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator creates work only if this attribute is true. &#xA;The purpose of this attribute is to help with generator model development &#xA;by disabling model parts which are still work in progress and would fail the generation&#xA;process, or, on the opposite, already working parts which would create delay and distraction&#xA;in testing and troubleshooting. Use ``Iterator`` for conditional generation."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="iterator" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Iterator contains context property name and allows to execute generator zero or more times depending on the property type.&#xA;&#xA;* If iterator is blank then generator is executed once using the current generation context.&#xA;* If iterator is not blank its value is used to get a property from the current generation context. Depending on the property value the generator is executed zero or more times:&#xA;    * null - in this case iterator value is used as a prefix to create a sub-context to be used by the generator. E.g. if iterator value is ``my-component/`` then ``my-property`` property of the sub-context maps to ``my-component/my-property`` property of the parent context.&#xA;    * boolean ``false`` - generator is not executed.&#xA;    * boolean ``true`` - generator is executed once with the current context, same as for a blank iterator.&#xA;    * single value (scalar) - generator is executed once with the current context and value available via ``data`` context property.&#xA;    * list - generator is executed once for each list element with element value being processed as explained here.&#xA;    * map - the map values are interoplated recursively by the current context. Then the map is wrapped into a context which is used to execute the generator.&#xA;    * ${javadoc/org.eclipse.emf.common.notify.AdapterFactory} - the factory shall be for ${javadoc/org.nasdanika.common.ContextIterator$Factory}. A context iterator is created by the factory and is used to iterate over the element.&#xA;&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="contextMap" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If context map is not blank then it is parsed as [YAML](https://en.wikipedia.org/wiki/YAML) and used to construct a generation context or contexts from the current context.&#xA;If contextMap value is string then it is used as a relative URL to load a YAML resource with context mapping. The resource is processed in the same way as the context map text.&#xA;If it is a map then then the map is interpolated by the current context and wrapped into a context.&#xA;If the value is a list then each of its elements is processed as explained here to produce a mapped context. In this case the generator is executed once for each list element for each iterator entry (nested loop). &#xA;&#xA;&#xA;"/>
      </eAnnotations>
      <eAnnotations source="urn:org.nasdanika">
        <details key="content-type" value="text/code"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Group" abstract="true" eSuperTypes="#//Generator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A group of generators. The group itself doesn't generate anything - it is an aggregation and conditional invocation (iteration) construct."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        eType="#//Generator" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Group elements."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="ReconcileAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines an action to take if project/resource with a given name already exists in the workspace."/>
    </eAnnotations>
    <eLiterals name="Keep" literal="Keep">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Discard the generated content and keep the original or skip the generation step altogether."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Append" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Append the new content to the existing. For containers (directories) it means&#xA;adding new resources next to the existing, which is semantically equivalent to merging."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Merge" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Merge new and existing content, typically using a merger service for files. &#xD;&#xA;For projects and directories merge is equivalent to append."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Overwrite" value="3">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Replace existing content with the new one. &#xA;For containers (directories) it means deleting container elements before generation.&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Cancel" value="4" literal="Cancel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Throw ``OperationCancelledException`` if resource/project already exists."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGenerator" abstract="true" interface="true"
      eSuperTypes="#//Generator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base interface for resources and resource group"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentGenerator" abstract="true" interface="true"
      eSuperTypes="#//Generator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base interface for generators of file content."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceContainer" abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Something which can contain resources, a grouping construct."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        eType="#//ResourceGenerator" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Folder can contain other resource generators."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true" eSuperTypes="#//ResourceGenerator ../../org.nasdanika.ncore/model/ncore.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates a resource - file or container. "/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reconcileAction" eType="#//ReconcileAction"
        defaultValueLiteral="Overwrite">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Action to take if resource with given name already exists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="merger" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Context property for a merger if reconcile action is Merge. &#xA;The property shall be either of type ${javadoc/org.nasdanika.codegen.gen.Merger} or ${javadoc/org.eclipse.emf.common.notify.AdapterFactory}. &#xA;In the latter case the factory shall be for ${javadoc/org.nasdanika.codegen.gen.Merger} type.&#xA;Some resource types may have a default merger. E.g. ${ecore-doc/codegen-java/CompilationUnit} or [Container](Container.html). &#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="File" eSuperTypes="#//Resource">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates File for a given content."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="content" lowerBound="1"
        upperBound="-1" eType="#//ContentGenerator" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="File content generators. &#xD;&#xA;Content produced by each generator is appended to the file content."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Container" eSuperTypes="#//Resource #//ResourceContainer">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Nameed container of resources, e.g. a folder/directory."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGroup" eSuperTypes="#//Group #//ResourceGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A group of resources. "/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentGroup" eSuperTypes="#//Group #//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A group of resources. "/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FreeMarkerGenerator" eSuperTypes="#//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates text from template and model using [FreeMarker](http://freemarker.org/)."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="base" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base URL for resolving templates. The URL is resolved relative to the model location.&#xA;If empty, then templates are resolved relative to the generator model location."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="template" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Template name."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="model" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of a property which value is used as a model for the template.&#xD;&#xA;If blank, the generation context is used as the model."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentReference" eSuperTypes="#//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference (URL) to content residing elsewhere, e.g. a template in a version control&#xA;system available for download over HTTP."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ref" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Content location (URL) resolved relative to the model location."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="interpolate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If ``true`` content is converted to String using the context charset (defaults to UTF-8), interpolated, and then converted to input stream using the same charset."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Filter" abstract="true" eSuperTypes="#//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Filter generates its output by processing and combining outputs of contained generators."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generators" upperBound="-1"
        eType="#//ContentGenerator" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Filter inputs."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Interpolator" eSuperTypes="#//Filter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Interpolator produces output by expanding tokens ``${token}`` in the &#xA;input using context properties."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mustache" eSuperTypes="#//Filter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Evaluates template using [Mustache for Java](https://github.com/spullara/mustache.java) with contexts bridged to Map scope.&#xA;&#xA;Propertes which values are functions can be invoked using {{#func}}...{{/func}} syntax, e.g. {{#import}}java.io.InputStream{{/import}}."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ZipArchive" eSuperTypes="#//ContentGenerator #//ResourceContainer">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Creates a zip archive (binary stream) from contained resources."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GeneratorReference" abstract="true"
      eSuperTypes="#//Generator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a generator. Generator references can be used to create multi-resource federated generation models. &#xA;Federated generation models can be used to keep reusable logic in shared models referenced by multiple other models.&#xA;Model federation can also be used to keep the models of manageable size, simplify testing, and to facilitate team modeling by assigning different models to different team members.&#xA;&#xA;Generator references would typically be used to reference generators defined in models in the same project or in generator models reacheable at both the modeling time and generation time.&#xA;&#xA;See also [GeneratorLink](GeneratorLink.html) for another approach to referencing generators.&#xA;"/>
    </eAnnotations>
    <eTypeParameters name="T">
      <eBounds eClassifier="#//Generator"/>
    </eTypeParameters>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The target generator is invoked to perform actual generation with context(s) iterated, mapped, and configured."/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//GeneratorReference/T"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGeneratorReference">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a resource generator."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//GeneratorReference">
      <eTypeArguments eClassifier="#//ResourceGenerator"/>
    </eGenericSuperTypes>
    <eGenericSuperTypes eClassifier="#//ResourceGenerator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentGeneratorReference">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a content generator."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//GeneratorReference">
      <eTypeArguments eClassifier="#//ContentGenerator"/>
    </eGenericSuperTypes>
    <eGenericSuperTypes eClassifier="#//ContentGenerator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceCollection" abstract="true"
      eSuperTypes="#//ResourceGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Resource collection adds zero or more resources to the containing resource container."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="path" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Path in the underlying container to use as a source of collection elements. Path prefix is removed from element name. E.g. if path is ``images`` and there is a resource named ``images/logo.png`` then there will be a collection element ``logo.png``."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Prefix to add to resource paths. E.g. if the prefix is ``gen_`` then ``logo.png`` will be added to the resource container as ``gen_logo.png``."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="includes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of [Ant path patterns](https://ant.apache.org/manual/dirtasks.html) specifying resources to include into the collection.&#xA;All resources are included if the includes list is empty.&#xA;&#xA;## Matching rules&#xA;&#xA;* `?` matches one character&#xA;* `*` matches zero or more characters&#xA;* `**` matches zero or more **directories** in a path&#xA;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="excludes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of [Ant path patterns](https://ant.apache.org/manual/dirtasks.html) specifying resources to exclude from the collection. Nothing is excluded if this list is empty."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="interpolationIncludes"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of [Ant path patterns](https://ant.apache.org/manual/dirtasks.html) specifying which included resources shall be interpolated. E.g. if ``includes`` contains ``*.bin`` and ``*.txt`` and ``interpolationIncludes`` contains ``*.txt`` then only text files will be interpolated. Unlike ``includes``, if this list is empty then nothing gets interpolated."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="interpolationExcludes"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of [Ant path patterns](https://ant.apache.org/manual/dirtasks.html) specifying which resources shall be excluded from interpolation."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reconcileAction" eType="#//ReconcileAction"
        defaultValueLiteral="Overwrite">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Action to take if resources (entities) contributed by the collection already exist in the container."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BundleResourceCollection" eSuperTypes="#//ResourceCollection">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A coolection of resources from an OSGi bundle (Eclipse plug-in)."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bundle" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Bundle symbolic name. Defaults to the bundle containing the model."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ZipResourceCollection" eSuperTypes="#//ResourceCollection">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A coolection of resources from Zip input streams."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="content" lowerBound="1"
        upperBound="-1" eType="#//ContentGenerator" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generators of zip input streams providing collection elements."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="HttpCall" eSuperTypes="#//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Makes an HTTP Call. Converts result to Map/List for ``application/json`` content type, to text for ``text/...`` content types. Returns a byte array otherwise."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="url" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="URL resolved relative to the model resource."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="method" eType="ecore:EEnum ../../org.nasdanika.ncore/model/ncore.ecore#//HttpMethod"
        defaultValueLiteral="GET"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="headers" upperBound="-1"
        eType="ecore:EClass ../../org.nasdanika.ncore/model/ncore.ecore#//Property"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="connectTimeout" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="60">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Connect timeout in seconds"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="readTimeout" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="60">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Read timeout in seconds"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="successCode" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="200">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="HTTP response code indicating success."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="body" upperBound="-1" eType="#//ContentGenerator"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="interpolate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If ``true`` response body is converted to String using the context charset (defaults to UTF-8), interpolated, and then converted to input stream using the same charset."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Text" eSuperTypes="#//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Value computes its result from text. &#xA;&#xA;Value implementation can be defined as follows:&#xA;&#xA;* Fully qualified class name, e.g. ``java.lang.Integer``. An instance of the implementation class is constructed using a contructor which takes ``org.nasdanika.common.Context`` and ``java.lang.String``, just ``java.lang.String``.&#xA;* Method reference using ``::`` as a separator between the fully qualified class name and the method name. This definition can be used if the type is a functional interface with a single method. If the method is not static then an instance of the implementation class is constructed using a contructor which takes ``org.nasdanika.common.Context`` and ``java.lang.String``, or just ``java.lang.String``.&#xA;* Provider reference using ``->`` as a separator between the fully qualified class name and the provider method. If the method is static then it shall take Context and String or just String. Otherwise an instance of the implementation class is constructed using a contructor which takes ``org.nasdanika.common.Context`` and ``java.lang.String``, or just ``java.lang.String``.&#xA;&#xA;When implementation is specified, value is equivalent to an operation with a single String argument."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Textual representation of the value. If interpolate is ``true`` then the value is interpolated in the context. If type and implementation are empty value is returned as is. &#xA;If type is specified and the result is not of that type, then the result is converted to the type using the context converter service.&#xA;"/>
      </eAnnotations>
      <eAnnotations source="urn:org.nasdanika">
        <details key="content-type" value="text/code"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="interpolate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If ``true`` (default) the value is interpolated."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GeneratorAdapter" abstract="true" eSuperTypes="#//Generator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Base class for resource and content adapters."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="factory" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Id of a named factory. The factory shall be for ${javadoc/org.nasdanika.common.SupplierFactory} type for content generators and of ${javadoc/org.nasdanika.common.ConsumerFactory} for resource generators. &#xA;In the resource adapter consumer is passed in instance of ${javadoc/org.nasdanika.common.resources.Container} for manipulation with container resources."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGeneratorAdapter" eSuperTypes="#//GeneratorAdapter #//ResourceGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Adapter generating resources."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentGeneratorAdapter" eSuperTypes="#//GeneratorAdapter #//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Adapter generating file content."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GeneratorLink" abstract="true" eSuperTypes="#//Generator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a generator using a URI resolved relatively to the link's resource URI. &#xA;Similarly to [GeneratorRefernce](GeneratorReference.html) generator links can be used to create multi-resource federated generation models. &#xA;Links do not require referenced models to be reacheable at the modeling time. Also ``ref`` is interpolated and as such can point to different generators depending on context properties.&#xA;Linked models/elements are loaded at generation time, diagnosed and then executed.&#xA;&#xA;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ref" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generato URI resolved relative to the generator link resource. If there is no fragment then the root model element is used. Otherwise the model element identified by the fragment part is used."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGeneratorLink" eSuperTypes="#//GeneratorLink #//ResourceGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Link to a resource generator."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentGeneratorLink" eSuperTypes="#//GeneratorLink #//ContentGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a content generator."/>
    </eAnnotations>
  </eClassifiers>
</ecore:EPackage>
