<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="codegen" nsURI="urn:org.nasdanika.codegen" nsPrefix="org.nasdanika.codegen">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="Code generation model."/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="WorkFactory" instanceClassName="org.nasdanika.codegen.WorkFactory"
      abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Work factory creates work to be executed during generation."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Context" instanceClassName="org.nasdanika.config.Context">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Context provides access to properties and services. Contexts are typically chained&#xD;&#xA;with a child context &quot;inheriting&quot; properties and services of the parent context(s)."/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Generator" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generator is the base class for model element performing code generation."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eOperations name="isFilterable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Resource generators shall return true from this method, e.g.:&#xD;&#xA;&#xD;&#xA;* Project, &#xD;&#xA;* File, &#xD;&#xA;* Folder, &#xD;&#xA;* Package fragment (root)&#xD;&#xA;* Compilation unit.&#xD;&#xA;* Zip Archive&#xD;&#xA;&#xD;&#xA;Generators which do not create workspace resources but rather contribute to their creation shall return false."/>
      </eAnnotations>
    </eOperations>
    <eOperations name="validate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Validates element."/>
      </eAnnotations>
      <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Diagnostics to add validation messages to."/>
        </eAnnotations>
      </eParameters>
      <eParameters name="context">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Validation context."/>
        </eAnnotations>
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="controller" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator controller class. Must implement org.nasdanika.codegen.GeneratorController&#xD;&#xA;for generators and org.nasdanika.codegen.GroupController for groups."/>
      </eAnnotations>
      <eAnnotations source="org.nasdanika.ui.java-class">
        <details key="root-type" value="org.nasdanika.codegen.GeneratorController"/>
        <details key="super-interfaces" value="org.nasdanika.codegen.GeneratorController"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namedGenerators" upperBound="-1"
        eType="#//NamedGenerator" containment="true"/>
    <eGenericSuperTypes eClassifier="ecore:EClass ../../org.nasdanika.config/model/config.ecore#//Configuration"/>
    <eGenericSuperTypes eClassifier="#//WorkFactory">
      <eTypeArguments eClassifier="#//List">
        <eTypeArguments eTypeParameter="#//Generator/T"/>
      </eTypeArguments>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This class allows to mount generators to the parent generator context as property providers&#xD;&#xA;accessible by name. It can be used for conditional invocation of named&#xD;&#xA;generators by the containing generator. context.get(generatorName) returns Work created by contained generator."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator name."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generator" lowerBound="1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The generator addressed by name.&#xD;&#xA;&#xD;&#xA;The generator shall be parameterized with EJavaObject, but due to a bug - https://bugs.eclipse.org/bugs/show_bug.cgi?id=510914 - it is now restricted to String generators.&#xD;&#xA;The generic parameter shall be changed to EObject once the bug is fixed.&#xD;&#xA;&#x9;&#xD;&#xA;"/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="executeWork" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If true (default), then the work created by contained generator is executed and &#xD;&#xA;the work execution result is injected into the container context. If false, then the&#xD;&#xA;work per-se is injected into the container generator context and it is up to the container&#xD;&#xA;generator to execute it."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Description."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Group">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Group of generators from which zero to all can be invoked during the generation process."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="elements" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Group elements."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eTypeParameter="#//Group/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="#//List">
        <eTypeArguments eTypeParameter="#//Group/T"/>
      </eTypeArguments>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGroup">
    <eGenericSuperTypes eClassifier="#//Group">
      <eTypeArguments eClassifier="#//Resource">
        <eTypeArguments/>
      </eTypeArguments>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceGenerator" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="ResourceGenerator generates a workspace resource - file or directory. "/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="enabled" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Resource generator generates resource only if this attribute is true. &#xD;&#xA;The purpose of this attribute is to help with generator model development &#xD;&#xA;by disabling model parts which are still work in progress and would fail the generation&#xD;&#xA;process, or, on the opposite, already working parts which would create delay and distraction&#xD;&#xA;in testing and troubleshooting. "/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//ResourceGenerator/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Workspace">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Workspace is a group of projects."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Group">
      <eTypeArguments eClassifier="#//IProject"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Folder">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates IFolder."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Folder can contain other resource generators."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Resource">
        <eTypeArguments>
          <eUpperBound eClassifier="#//IResource"/>
        </eTypeArguments>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IFolder"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Nature" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates project nature, e.g. Java or Maven nature."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="#//IProjectNature"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Resource" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates project resource - file or directory."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Resource name. Interpolated. May be a path name, i.e. contain separators, e.g. ``mydir/myfile.txt``"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reconcileAction" eType="#//ReconcileAction"
        defaultValueLiteral="Append">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Action to take if resource with given name already exists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//ResourceGenerator">
      <eTypeArguments eTypeParameter="#//Resource/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GenericFile">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generic file creates a file handler (IFile) and then it is responsibility of the controller to provide&#xD;&#xA;file contents."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IFile"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="InputStream" instanceClassName="java.io.InputStream"/>
  <eClassifiers xsi:type="ecore:EDataType" name="Void" instanceClassName="java.lang.Void"/>
  <eClassifiers xsi:type="ecore:EClass" name="Project">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates workspace project."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Project name. The name is interpolated &#xD;&#xA;during generation and as such may contain tokens to be expanded."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="natures" upperBound="-1"
        eType="#//Nature" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Project natures."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="resources" upperBound="-1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Project resources."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Resource">
        <eTypeArguments>
          <eUpperBound eClassifier="#//IResource"/>
        </eTypeArguments>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="reconcileAction" eType="#//ReconcileAction"
        defaultValueLiteral="Append">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Action to take if a project with given name already exists."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//ResourceGenerator">
      <eTypeArguments eClassifier="#//IProject"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="File" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates IFile."/>
    </eAnnotations>
    <eTypeParameters name="C"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="merger" eType="ecore:EClass ../../org.nasdanika.config/model/config.ecore#//Service"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If reconcile action is ``Merge`` then merger gets instantiated to merge existing and new&#xA;content of the file. The merger class shall implement ``org.nasdanika.codegen.Merger&lt;T>`` &#xA;where ``T`` is ``String`` for text files and ``InputStream`` for binary files."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generators" lowerBound="1"
        upperBound="-1" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="File content generators. &#xD;&#xA;Content produced by each generator is appended to the file content."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eTypeParameter="#//File/C"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IFile"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryFile">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Binary file, with ``InputStream`` content."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//File">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextFile">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Text file with ``String`` content."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="encoding" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Optional character encoding."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//File">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="IFile" instanceClassName="org.eclipse.core.resources.IFile"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IFolder" instanceClassName="org.eclipse.core.resources.IFolder"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IProject" instanceClassName="org.eclipse.core.resources.IProject"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IProjectNature" instanceClassName="org.eclipse.core.resources.IProjectNature"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IWorkspaceRoot" instanceClassName="org.eclipse.core.resources.IWorkspaceRoot"/>
  <eClassifiers xsi:type="ecore:EEnum" name="ReconcileAction">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines an action to take if project/resource with a given name already exists in the workspace."/>
    </eAnnotations>
    <eLiterals name="Keep" literal="Keep">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Discard the generated content and keep the original or skip the generation step altogether."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Append" value="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Append the new content to the existing. For project and directories it means&#xD;&#xA;adding new resources next to the existing, which is semantically equivalent to merging."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Merge" value="2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Merge new and existing content, typically using a merger service for files. &#xD;&#xA;For projects and directories merge is equivalent to append."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ConfirmOverwrite" value="3" literal="Confirm Overwrite">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Replace existing content with the new one upon confirmation (see below). &#xD;&#xA;For directories and projects it means deleting the project/directory&#xD;&#xA;and re-creating with the new content.&#xD;&#xA;&#xD;&#xA;If the generation context contains ``overwrite-predicate`` property, then the value&#xD;&#xA;of the property is cast to ``java.util.function.Predicate`` and its ``test()`` method is invoked.&#xD;&#xA;If the return value is ``true`` then the resource/project get overwritten, if ``false`` it is left intact (same as ``Keep``).&#xD;&#xA;&#xD;&#xA;The predicate may throw ``org.eclipse.core.runtime.OperationCanceledException`` to cancel generation (same as ``Cancel``).&#xD;&#xA;&#xD;&#xA;Clients may create overwrite predicates which open an overwrite confirmation dialog to solicit overwrite decision from the user. "/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Overwrite" value="4">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Replace existing content with the new one. &#xD;&#xA;For directories and projects it means deleting the project/directory&#xD;&#xA;and re-creating with the new content.&#xD;&#xA;"/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="Cancel" value="5" literal="Cancel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Throw ``OperationCancelledException`` if resource/project already exists."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ResourceReference">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference to a resource generator defined elsewhere."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Reference target."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Resource">
        <eTypeArguments eClassifier="#//IResource"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IResource"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StaticText">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Static text. Can be used as text file content or as input to interpolator or filter."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Text content."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FreeMarkerTemplateLoaderType">
    <eLiterals name="URL" literal="URL"/>
    <eLiterals name="Bundle" value="1"/>
    <eLiterals name="Package" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FreeMarkerGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Generates text from template and model using [FreeMarker](http://freemarker.org/)."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="templateLoaderType" lowerBound="1"
        eType="#//FreeMarkerTemplateLoaderType"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="base" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base URL, bundle path, or package for resolving templates. &#xD;&#xA;If empty, then templates are resolved relative to the &#xD;&#xA;context base URL, which typically would be the generator model location."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="template" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Template name."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="model" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of a property which value is used as the model for the template.&#xD;&#xA;If blank, the generation context is used as the model."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ECoreModelGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Writes the model specified in ``model`` context property to XML."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="model" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Name of the property which value is the model to write to XML."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContentReference" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Reference (URL) to a content residing elsewhere, e.g. a template in a version control&#xD;&#xA;system available for download over HTTP."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ref" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Content location (URL)."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//ContentReference/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Converter" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Converter converts input of a generator to produce output."/>
    </eAnnotations>
    <eTypeParameters name="S"/>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generator" lowerBound="1"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator producing converter input."/>
      </eAnnotations>
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eTypeParameter="#//Converter/S"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//Converter/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Filter" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Filter is a converter with the same input and output types, &#xD;&#xA;e.g. text interpolator or stream compressor."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eGenericSuperTypes eClassifier="#//Converter">
      <eTypeArguments eTypeParameter="#//Filter/T"/>
      <eTypeArguments eTypeParameter="#//Filter/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaGenerator" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This generator instantiates and invokes Java class to generate output. &#xD;&#xA;The generator Java class shall implement ``org.nasdanika.codegen.IGenerator``.&#xD;&#xA;&#xD;&#xA;For example, JET templates may use a skeleton like shown below:&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;```java&#xD;&#xA;public class CLASS implements org.nasdanika.codegen.IGenerator&lt;String> {&#xD;&#xA;&#xA;    &#xA;&#xA;public String generate(org.nasdanika.codegen.Context context, org.eclipse.core.runtime.IProgressMonitor monitor) throws Exception {&#xD;&#xA;        &#xA;return &quot;&quot;;&#xA;   &#xD;&#xA;    }&#xA; &#xD;&#xA;}&#xD;&#xA;```&#xD;&#xA;&#xD;&#xA;and classes compiled from these template can be used by the JavaGenerator."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="className" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Generator class name."/>
      </eAnnotations>
      <eAnnotations source="org.nasdanika.ui.java-class">
        <details key="root-type" value="org.nasdanika.codegen.Generator"/>
        <details key="super-interfaces" value="org.nasdanika.codegen.Generator"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//JavaGenerator/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Interpolator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Interpolator produces output by expanding mustache tokens ``{{token}}`` in the &#xD;&#xA;input using context properties."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Filter">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JETEmitter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Invokes ``org.eclipse.emf.codegen.jet.JETEmitter`` to compile and evaluate a template."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="templateURI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Template location."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaFilter" abstract="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Instantiates a Java class to filter content. &#xD;&#xA;The filter Java class shall implement ``org.nasdanika.codegen.IFilter&lt;T>``, where&#xD;&#xA;``T`` is content type - ``String`` for text files and ``InputStream`` for binary files."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="className" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Filter class name."/>
      </eAnnotations>
      <eAnnotations source="org.nasdanika.ui.java-class">
        <details key="root-type" value="org.nasdanika.codegen.Filter"/>
        <details key="super-interfaces" value="org.nasdanika.codegen.Filter"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Filter">
      <eTypeArguments eTypeParameter="#//JavaFilter/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Provider" instanceClassName="org.nasdanika.config.Provider"
      abstract="true" interface="true">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Providers are used to create configuration items using given context."/>
    </eAnnotations>
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Exception" instanceClassName="java.lang.Exception"/>
  <eClassifiers xsi:type="ecore:EDataType" name="IResource" instanceClassName="org.eclipse.core.resources.IResource"/>
  <eClassifiers xsi:type="ecore:EDataType" name="List" instanceClassName="java.util.List">
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="Merger" instanceClassName="org.nasdanika.codegen.Merger">
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaTextFilter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``String`` binding of JavaFilter."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaFilter">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaStreamFilter">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``InputStream`` binding of JavaFilter."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaFilter">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaTextGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``String`` binding of JavaGenerator."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaGenerator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="JavaStreamGenerator">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="``InputStream`` binding of JavaGenerator."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//JavaGenerator">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScriptedGenerator" abstract="true">
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="script" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Script is a Java method body taking ``Context context, IProgressMonitor monitor`` and returning String or InputStream depending on type binding:&#xD;&#xA;&#xD;&#xA;```java&#xD;&#xA;T generate(Context context, IProgressMonitor monitor) throws Exception {&#xD;&#xA;    // --- Script here ---&#xD;&#xA;}&#xD;&#xA;```"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Generator">
      <eTypeArguments eTypeParameter="#//ScriptedGenerator/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScriptedTextGenerator">
    <eGenericSuperTypes eClassifier="#//ScriptedGenerator">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScriptedStreamGenerator">
    <eGenericSuperTypes eClassifier="#//ScriptedGenerator">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScriptedFilter" abstract="true">
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="script" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Script is a Java method body taking ``Context context, IGenerator generator, IProgressMonitor monitor`` and returning String or InputStream depending on type binding:&#xD;&#xA;&#xD;&#xA;```java&#xD;&#xA;T generate(Context context, IGenerator generator, IProgressMonitor monitor) throws Exception {&#xD;&#xA;    // --- Script here ---&#xD;&#xA;}&#xD;&#xA;```"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Filter">
      <eTypeArguments eTypeParameter="#//ScriptedFilter/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScriptedTextFilter">
    <eGenericSuperTypes eClassifier="#//ScriptedFilter">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ScriptedStreamFilter">
    <eGenericSuperTypes eClassifier="#//ScriptedFilter">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TextContentReference">
    <eGenericSuperTypes eClassifier="#//ContentReference">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="StreamContentReference">
    <eGenericSuperTypes eClassifier="#//ContentReference">
      <eTypeArguments eClassifier="#//InputStream"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="SubMonitor" instanceClassName="org.eclipse.core.runtime.SubMonitor"/>
  <eClassifiers xsi:type="ecore:EClass" name="ZipArchive">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Zip archive extracts its entries into its container. If zip archive name is not empty, it is used as a prefix for entry names. / separator is added at the end of the archive name if it doesn't already end with /&#xD;&#xA;Zip archive reconcile action is applied to all entries and merger is applied to all files."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generator" lowerBound="1"
        containment="true">
      <eGenericType eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//InputStream"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="merger" eType="ecore:EClass ../../org.nasdanika.config/model/config.ecore#//Service"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If reconcile action is ``Merge`` then merger gets instantiated to merge existing and new&#xD;&#xA;content file entries. The merger class shall implement ``org.nasdanika.codegen.Merger&lt;InputStream>``."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IContainer"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EDataType" name="IContainer" instanceClassName="org.eclipse.core.resources.IContainer"/>
  <eClassifiers xsi:type="ecore:EClass" name="Mustache">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Evaluates template using Mustache for Java (https://github.com/spullara/mustache.java) with contexts bridged to Map scope.&#xD;&#xA;&#xD;&#xA;Import manager and Java Expression Evaluator are functions and as such &#xD;&#xA;can be invoked using {{#func}}...{{/func}} syntax, e.g. {{#import}}java.io.InputStream{{/import}}."/>
    </eAnnotations>
    <eGenericSuperTypes eClassifier="#//Filter">
      <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BundleResource">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Bundle resource copies entries matching the paths into its container. If bundle resource name is not empty, it is used as a prefix for entry names. / separator is added at the end of the bundle resource name if it doesn't already end with /&#xA;Bundle resource reconcile action is applied to all entries and merger is applied to all files."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="merger" eType="ecore:EClass ../../org.nasdanika.config/model/config.ecore#//Service"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If reconcile action is ``Merge`` then merger gets instantiated to merge existing and new&#xD;&#xA;content file entries. The merger class shall implement ``org.nasdanika.codegen.Merger&lt;InputStream>``."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="bundle" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Source bundle symbolic name, interpolated."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="basePath" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base path is added to paths to match, but not to the target paths."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="paths" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Paths to match, interpolated. If path ends with / it means a directory and all resources from that directory match."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//Resource">
      <eTypeArguments eClassifier="#//IContainer"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eSubpackages name="java" nsURI="urn:org.nasdanika.codegen.java" nsPrefix="org.nasdanika.codegen.java">
    <eClassifiers xsi:type="ecore:EClass" name="JavaNature" eSuperTypes="#//Nature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Java nature."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="packagefragmentroots"
          upperBound="-1" eType="#//java/PackageFragmentRoot" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package fragments roots (source folders)."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EDataType" name="IJavaProject" instanceClassName="org.eclipse.jdt.core.IJavaProject"/>
    <eClassifiers xsi:type="ecore:EDataType" name="IPackageFragmentRoot" instanceClassName="org.eclipse.jdt.core.IPackageFragmentRoot"/>
    <eClassifiers xsi:type="ecore:EDataType" name="IPackageFragment" instanceClassName="org.eclipse.jdt.core.IPackageFragment"/>
    <eClassifiers xsi:type="ecore:EDataType" name="ICompilationUnit" instanceClassName="org.eclipse.jdt.core.ICompilationUnit"/>
    <eClassifiers xsi:type="ecore:EClass" name="PackageFragmentRoot">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Package fragment root (source folder)."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Folder name within the project. Interpolated and may be a path name, i.e. &#xD;&#xA;contain file separators, e.g. ``src/java``."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="packagefragments" upperBound="-1"
          eType="#//java/PackageFragment" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package fragments (packages)."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resources" upperBound="-1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Folder can contain other resource generators."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Resource">
          <eTypeArguments eClassifier="#//IResource"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//java/IPackageFragmentRoot"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PackageFragment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Package fragment (package)."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package name, interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="compilationunits" upperBound="-1"
          eType="#//java/CompilationUnit" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Package compilation units."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="resources" upperBound="-1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Folder can contain other resource generators."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Resource">
          <eTypeArguments eClassifier="#//IResource"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//java/IPackageFragment"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CompilationUnit">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Compilation unit."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Compilation unit name without ``.java`` extension. Interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="merge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If true, new and old compilation unit content gets merged with ``org.eclipse.emf.codegen.merge.java.JMerger``."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="format" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
          defaultValueLiteral="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="If true, generated/merged source is automatically formatted."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="generators" upperBound="-1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generator to produce compilation unit content."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="#//java/ICompilationUnit"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Member" abstract="true">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Member name, not applicable to constructors."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="modifiers" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Modifiers, e.g. public final. Interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="commentGenerators" upperBound="-1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Comment generators in addition to comment attribute content."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="comment" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Comment. Interpolated. "/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="annotations" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Annotations are output between the comment and the member declaration starting with modifiers, if any. Interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="bodyGenerators" upperBound="-1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generators which generate member body. For Field field initializer is considered as body.&#xD;&#xA;"/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="typeParameters" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Type parameters, interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eGenericSuperTypes eClassifier="#//Generator">
        <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eGenericSuperTypes>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//java/Member">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="superTypes" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Supertypes. Elements are interpolated and each element can be a comma-separated list of supertypes.&#xD;&#xA;For classes the first supertype goes to the extends clause and the rest to the implements clause. For interfaces all supertypes go to the implements clause.&#xD;&#xA;For enum everything goes to the implements clause. Not applicable to annotations."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Field" eSuperTypes="#//java/Member">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Operation" abstract="true" eSuperTypes="#//java/Member">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="parameters" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Parameters, interpolated."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="thrownExceptions" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//java/Type"/>
    <eClassifiers xsi:type="ecore:EClass" name="Interface" eSuperTypes="#//java/Type"/>
    <eClassifiers xsi:type="ecore:EClass" name="Annotation" eSuperTypes="#//java/Type"/>
    <eClassifiers xsi:type="ecore:EClass" name="Enum" eSuperTypes="#//java/Type">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="superInterfaces" upperBound="-1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Superinterfaces are listed in implements clause. Elements are interpolated and each element can be a comma-separated list of superinterfaces."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Constructor" eSuperTypes="#//java/Operation"/>
    <eClassifiers xsi:type="ecore:EClass" name="Method" eSuperTypes="#//java/Operation">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="returnType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="PluginNature" eSuperTypes="#//Nature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Plugin nature, generates MANIFEST.MF, build.properties, plugin.xml or fragment.xml"/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="manifestGenerator" lowerBound="1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generates MANIFEST.MF file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="buildPropertiesGenerator"
          lowerBound="1" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generates build.properties file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="pluginXmlGenerator" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Optional generator of ``plugin.xml`` file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="fragmentXmlGenerator"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Optional generator of ``fragment.xml`` file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="FeatureNature" eSuperTypes="#//Nature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Feature nature. Generates feature.xml and build.properties."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="featureXmlGenerator"
          lowerBound="1" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generates MANIFEST.MF file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="buildPropertiesGenerator"
          lowerBound="1" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Generates build.properties file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="maven" nsURI="urn:org.nasdanika.codegen.maven" nsPrefix="org.nasdanika.codegen.maven">
    <eClassifiers xsi:type="ecore:EClass" name="MavenNature" eSuperTypes="#//Nature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Maven nature."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="pomGenerator" lowerBound="1"
          containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Optional generator of ``pom.xml`` file."/>
        </eAnnotations>
        <eGenericType eClassifier="#//Generator">
          <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eGenericType>
      </eStructuralFeatures>
    </eClassifiers>
  </eSubpackages>
  <eSubpackages name="wizard" nsURI="urn:org.nasdanika.codegen.wizard" nsPrefix="org.nasdanika.codegen.wizard">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="This EPackage contains classes for creating model-driven (code generation) wizards with&#xD;&#xA;pages backed by model elements and rendered with EMF Forms or EObjectRenderer instances."/>
    </eAnnotations>
    <eClassifiers xsi:type="ecore:EClass" name="Wizard">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Wizard is a list of pages for collecting user input."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="pages" upperBound="-1"
          eType="#//wizard/WizardPage" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="WizardPage" abstract="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Wizard page has name, message and contains wizard page content which is specific for a particular wizard."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" lowerBound="1"
          eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="content" lowerBound="1"
          eType="#//wizard/WizardPageContent" containment="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="WizardPageContent" abstract="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base class for wizard page content. Wizard implementations shall provide&#xD;&#xA;concrete subclasses of this class. "/>
      </eAnnotations>
      <eOperations name="validate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Validates the content. This method is used by isPageComplete(), &#xD;&#xA;which is turn is used by canFlipToNextPage() and canFinish().&#xD;&#xA;isPageComplete() returns true if vaildation yields no error level diagnostics."/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Diagnostics to add validation messages to."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Validation context."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="shallShow" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Returns true (default) if the page shall be shown. &#xD;&#xA;Override to conditionally skip pages. For example, if the user doesn't check, say &quot;Connect to database&quot; checkbox, when then there is no point in showing &quot;Database Connection Configuration&quot; page."/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
